@page "/Tecnico/Index"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject TecnicosService tecnicosService
@rendermode InteractiveServer

<PageTitle>Consulta de T&eacute;cnico</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Consulta de T&eacute;cnicos</h5>
            <a href="/Tecnico/Create" class="btn btn-success">
                <i class="bi bi-plus-circle me-2"></i> Crear
            </a>
        </div>

        <div class="card-body">
            <!-- Filtros de búsqueda -->
            <div class="row mb-3">
                <div class="col-md-3">
                    <label class="col-form-label"><strong>Filtrar por:</strong></label>
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Seleccione una opción</option>
                        <option value="Id">TecnicoId</option>
                        <option value="Nombres">Nombres</option>
                    </InputSelect>
                </div>

                <div class="col-md-4">
                    <label class="col-form-label"><strong>B&uacute;squeda:</strong></label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Ingrese su búsqueda" />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
            </div>

            <!-- Tabla de técnicos -->
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th>TecnicoID</th>
                        <th>Nombres</th>
                        <th>Sueldo por Hora</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ListaTecnicos.Any())
                    {
                        @foreach (var tecnico in ListaTecnicos)
                        {
                            <tr>
                                <td>@tecnico.TecnicoId</td>
                                <td>@tecnico.Nombres</td>
                                <td>@tecnico.SueldoHora</td>
                                <td>
                                    <a href="/Tecnico/Edit/@tecnico.TecnicoId" class="btn btn-outline-success">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-outline-danger" @onclick="() => EliminarTecnico(tecnico.TecnicoId)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No hay técnicos registrados.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer text-start">
            <label><strong>Cantidad de técnicos:</strong> @ListaTecnicos.Count()</label>
        </div>
    </div>
</div>

@code {
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "Id" && int.TryParse(ValorFiltro, out int tecnicoId))
            {
                ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId == tecnicoId);
            }
            else if (Filtro == "Nombres")
            {
                ListaTecnicos = await tecnicosService
                .Listar(t => t.Nombres
                    .ToLower().Contains(ValorFiltro
                        .ToLower()));
            }
        }
        else
        {
            ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
        }
    }

    private async Task EliminarTecnico(int tecnicoId)
    {
        var confirmado = await tecnicosService.Eliminar(tecnicoId);
        if (confirmado)
        {
            ListaTecnicos.RemoveAll(t => t.TecnicoId == tecnicoId);
        }
    }
}
